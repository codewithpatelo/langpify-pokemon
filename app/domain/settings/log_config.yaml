version: 1
disable_existing_loggers: false

formatters:
  console_colored:
    (): colorlog.ColoredFormatter
    format: "%(asctime)s | %(log_color)s%(levelname)-8s%(reset)s | %(process)d | %(blue)s%(name)s%(reset)s | %(purple)s%(filename)s:%(lineno)d%(reset)s | %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
    log_colors:
      DEBUG: cyan
      INFO: green
      WARNING: yellow
      ERROR: red
      CRITICAL: "red,bg_white"
    reset: true

  file_plain:
    format: "%(asctime)s | %(levelname)-8s | %(process)d | %(name)s | %(filename)s:%(lineno)d | %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"

  json:
    format: "%(asctime)s %(name)s %(levelname)s %(message)s"
    class: pythonjsonlogger.jsonlogger.JsonFormatter

handlers:
  console:
    class: colorlog.StreamHandler
    level: DEBUG
    formatter: console_colored
    stream: ext://sys.stdout


environments:
  dev:
    root:
      level: INFO
      handlers: [console]
    loggers:
      uvicorn:
        level: INFO
        propagate: false
        handlers: [console]
      fastapi:
        level: INFO
        propagate: true
        handlers: [console]
      openai:
        level: INFO
        propagate: true
        handlers: [console]

  staging:
    root:
      level: WARNING
      handlers: [console, file]
    loggers:
      uvicorn:
        level: INFO
        propagate: false
        handlers: [console, file]
      fastapi:
        level: INFO
        propagate: true
        handlers: [console, file]
      openai:
        level: INFO
        propagate: true
        handlers: [console, file]

  prod:
    root:
      level: ERROR
      handlers: [file]
    loggers:
      uvicorn:
        level: ERROR
        propagate: false
        handlers: [file]
      fastapi:
        level: ERROR
        propagate: true
        handlers: [file]
      openai:
        level: WARNING
        propagate: true
        handlers: [file]
